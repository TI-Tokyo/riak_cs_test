%% -*- erlang -*-
{minimum_otp_vsn, "22.0"}.

{cover_enabled, true}.

{edoc_opts, [{preprocess, true}]}.

{erl_opts, [{src_dirs, [src, intercepts]},
            warnings_as_errors,
            {i, "../riak_cs/apps/riak_cs/include"}]}.

{erl_first_files, ["src/rt_intercept_pt.erl"]}.

{eunit_opts, [verbose]}.

{deps, [
        {getopt, "1.0.2"},
        {meck, "0.9.2"},
        {riakc, {git, "https://github.com/basho/riak-erlang-client", {tag, "3.0.10"}}},
        {rcs_common, {git, "https://github.com/TI-Tokyo/rcs_common.git", {tag, "3.0.2"}}},
        {riakhttpc, {git, "https://github.com/basho/riak-erlang-http-client", {tag, "3.0.10"}}},
        {kvc, {git, "https://github.com/etrepum/kvc", {tag, "v1.7.0"}}},
        {erlcloud, {git, "https://github.com/TI-Tokyo/erlcloud.git", {tag, "0.4.7"}}}
       ]}.

{escript_incl_apps, [getopt, riakhttpc, riakc, ibrowse, mochiweb, kvc]}.
{escript_emu_args, "%%! -escript main riak_test_escript +K true +P 10000 -env ERL_MAX_PORTS 10000\n"}.

{post_hooks, [{escriptize, "cp \"$REBAR_BUILD_DIR/bin/riak_test\" ./riak_test"}]}.

{profiles, [{test, [{extra_src_dirs, ["tests"]}]}]}.
